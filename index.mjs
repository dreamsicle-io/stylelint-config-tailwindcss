/**
 * @type {import("stylelint").Config}
 */
const stylelintConfigTailwindCSS = {
  languageOptions: {
    syntax: {
      atRules: {
        // See: https://tailwindcss.com/docs/functions-and-directives#directives
        "theme": {
          prelude: "<custom-ident>",
        },
        "source": {
          prelude: "<string>",
        },
        "utility": {
          prelude: "<custom-ident>",
        },
        "variant": {
          prelude: "<custom-ident>",
        },
        "custom-variant": {
          prelude: "<custom-ident>",
        },
        "reference": {
          prelude: "<string>",
        },
        "apply": {
          prelude: "<custom-ident>+",
        },
      },
      types: {
        // See: https://tailwindcss.com/docs/functions-and-directives#functions
        "--alpha()": "--alpha( <color> / <percentage> )",
        "--spacing()": "--spacing( <number> )",
      },
      properties: {
        // Properties that accept `<color>`.
        "color": "| <--alpha()>",
        "accent-color": "| <--alpha()>",
        "caret-color": "| <--alpha()>",
        "text-decoration-color": "| <--alpha()>",
        "text-emphasis-color": "| <--alpha()>",
        "background-color": "| <--alpha()>",
        "background": "| <--alpha()>",
        "border-color": "| <--alpha()>",
        "border-top-color": "| <--alpha()>",
        "border-right-color": "| <--alpha()>",
        "border-bottom-color": "| <--alpha()>",
        "border-left-color": "| <--alpha()>",
        "border-block-color": "| <--alpha()>",
        "border-block-start-color": "| <--alpha()>",
        "border-block-end-color": "| <--alpha()>",
        "border-inline-color": "| <--alpha()>",
        "border-inline-start-color": "| <--alpha()>",
        "border-inline-end-color": "| <--alpha()>",
        "outline-color": "| <--alpha()>",
        "column-rule-color": "| <--alpha()>",
        "fill": "| <--alpha()>",
        "stroke": "| <--alpha()>",
        "stop-color": "| <--alpha()>",
        "flood-color": "| <--alpha()>",
        "lighting-color": "| <--alpha()>",
        // Properties that accept `<length>`.
        "width": "| <--spacing()>",
        "min-width": "| <--spacing()>",
        "max-width": "| <--spacing()>",
        "height": "| <--spacing()>",
        "min-height": "| <--spacing()>",
        "max-height": "| <--spacing()>",
        "block-size": "| <--spacing()>",
        "min-block-size": "| <--spacing()>",
        "max-block-size": "| <--spacing()>",
        "inline-size": "| <--spacing()>",
        "min-inline-size": "| <--spacing()>",
        "max-inline-size": "| <--spacing()>",
        "top": "| <--spacing()>",
        "right": "| <--spacing()>",
        "bottom": "| <--spacing()>",
        "left": "| <--spacing()>",
        "inset": "| <--spacing()>",
        "inset-block": "| <--spacing()>",
        "inset-block-start": "| <--spacing()>",
        "inset-block-end": "| <--spacing()>",
        "inset-inline": "| <--spacing()>",
        "inset-inline-start": "| <--spacing()>",
        "inset-inline-end": "| <--spacing()>",
        "margin": "| <--spacing()>",
        "margin-top": "| <--spacing()>",
        "margin-right": "| <--spacing()>",
        "margin-bottom": "| <--spacing()>",
        "margin-left": "| <--spacing()>",
        "margin-block": "| <--spacing()>",
        "margin-block-start": "| <--spacing()>",
        "margin-block-end": "| <--spacing()>",
        "margin-inline": "| <--spacing()>",
        "margin-inline-start": "| <--spacing()>",
        "margin-inline-end": "| <--spacing()>",
        "padding": "| <--spacing()>",
        "padding-top": "| <--spacing()>",
        "padding-right": "| <--spacing()>",
        "padding-bottom": "| <--spacing()>",
        "padding-left": "| <--spacing()>",
        "padding-block": "| <--spacing()>",
        "padding-block-start": "| <--spacing()>",
        "padding-block-end": "| <--spacing()>",
        "padding-inline": "| <--spacing()>",
        "padding-inline-start": "| <--spacing()>",
        "padding-inline-end": "| <--spacing()>",
        "border-width": "| <--spacing()>",
        "border-top-width": "| <--spacing()>",
        "border-right-width": "| <--spacing()>",
        "border-bottom-width": "| <--spacing()>",
        "border-left-width": "| <--spacing()>",
        "border-block-start-width": "| <--spacing()>",
        "border-block-end-width": "| <--spacing()>",
        "border-inline-start-width": "| <--spacing()>",
        "border-inline-end-width": "| <--spacing()>",
        "outline-width": "| <--spacing()>",
        "column-width": "| <--spacing()>",
        "flex-basis": "| <--spacing()>",
        "gap": "| <--spacing()>",
        "row-gap": "| <--spacing()>",
        "column-gap": "| <--spacing()>",
        "letter-spacing": "| <--spacing()>",
        "word-spacing": "| <--spacing()>",
        "line-height": "| <--spacing()>",
        "text-indent": "| <--spacing()>",
        "scroll-padding": "| <--spacing()>",
        "scroll-padding-top": "| <--spacing()>",
        "scroll-padding-right": "| <--spacing()>",
        "scroll-padding-bottom": "| <--spacing()>",
        "scroll-padding-left": "| <--spacing()>",
        "scroll-padding-block": "| <--spacing()>",
        "scroll-padding-block-start": "| <--spacing()>",
        "scroll-padding-block-end": "| <--spacing()>",
        "scroll-padding-inline": "| <--spacing()>",
        "scroll-padding-inline-start": "| <--spacing()>",
        "scroll-padding-inline-end": "| <--spacing()>",
        "scroll-margin": "| <--spacing()>",
        "scroll-margin-top": "| <--spacing()>",
        "scroll-margin-right": "| <--spacing()>",
        "scroll-margin-bottom": "| <--spacing()>",
        "scroll-margin-left": "| <--spacing()>",
        "scroll-margin-block": "| <--spacing()>",
        "scroll-margin-block-start": "| <--spacing()>",
        "scroll-margin-block-end": "| <--spacing()>",
        "scroll-margin-inline": "| <--spacing()>",
        "scroll-margin-inline-start": "| <--spacing()>",
        "scroll-margin-inline-end": "| <--spacing()>",
      },
    },
  },
  rules: {
    "import-notation": "string",
		"lightness-notation": "number",
		"hue-degree-notation": "number",
    "nesting-selector-no-missing-scoping-root": [true, {
      ignoreAtRules: [
        "custom-variant",
      ],
    }],
    "color-hex-length": "long",
  },
};

export default stylelintConfigTailwindCSS;
